language: cpp

os: linux
dist: focal

jobs:
   include:
        
      - env: DB=mysql FS=local
        arch: amd64
        compiler: gcc
       
      - env: DB=dynamo FS=S3
        arch: amd64
        compiler: gcc
        
      - env: DB=dynamo FS=local
        arch: amd64
        compiler: gcc

      - env: DB=dynamo FS=S3
        arch: arm64-graviton2
        compiler: gcc

branches:
    only:
        - main
        - move-to-httplib 

cache: apt
addons:
  apt:
    packages:
      - libboost-system-dev
      - libmysqlclient-dev
      - libcurl4-openssl-dev
      - libssl-dev
      - uuid-dev
      - zlib1g-dev
      - libpulse-dev

before_install: 
    - cd ..
    - git clone https://github.com/aws/aws-sdk-cpp.git
    - mkdir aws-sdk-cpp.build && cd aws-sdk-cpp.build
    - cmake ../aws-sdk-cpp -DBUILD_ONLY="dynamodb;s3;sqs" -DENABLE_TESTING=OFF -DCUSTOM_MEMORY_MANAGEMENT=OFF  -DBUILD_SHARED_LIBS=OFF
    - sudo make && sudo make install
    - cd ..
    - git clone https://github.com/Thalhammer/jwt-cpp.git
    - mkdir jwt-cpp.build && cd jwt-cpp.build
    - cmake -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF ../jwt-cpp
    - make && sudo make install    
    - cd ..
    - git clone https://github.com/yhirose/cpp-httplib.git
    - mkdir httplib.build && cd httplib.build
    - cmake ../cpp-httplib 
    - make && sudo make install
    - cd ..
    - mkdir vts && mkdir vts.build && cd vts.build
    - if [ "$DB" -eq "dynamo" -a "$FS" -eq "local"]; then cmake -DDB_DYNAMO=ON -DFS_LOCAL=ON ../vitanza-service; fi
    - if [ "$DB" -eq "dynamo" -a "$FS" -eq "s3"]; then cmake -DDB_DYNAMO=ON -DFS_S3=ON ../vitanza-service; fi
    - if [ "$DB" = "mysql" -a "$FS" -eq "local" ]; then cmake -DDB_MYSQL=ON -DDB_DYNAMO=OFF -DFS_LOCAL=ON ../vitanza-service; fi
    - if [ "$DB" = "mysql" -a "$FS" -eq "s3" ]; then cmake -DDB_MYSQL=ON -DDB_DYNAMO=OFF -DFS_S3=ON ../vitanza-service; fi
       
script: make -j2
